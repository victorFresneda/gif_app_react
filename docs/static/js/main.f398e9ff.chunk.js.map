{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inptValue","setinptValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","target","prototypes","PropTypes","func","isRequired","getGifs","categoria","a","url","fetch","resp","json","data","gifs","map","imgs","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sMAGMA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAkBA,OAEI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAUK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAa,MAQjB,SACI,uBACIO,YAAY,cACZC,KAAK,OACLC,MAAQV,EACRW,SAvBc,SAACR,GACvBF,EAAaE,EAAES,OAAOF,aA4B9Bb,EAAYgB,WAAa,CACrBf,cAAegB,IAAUC,KAAKC,YAGnBnB,Q,+BCpCFoB,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCF,EAFpC,+DAGAG,MAAMD,GAHN,cAGbE,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZT,IAAKO,EAAKG,OAAOC,iBAAiBX,QAVvB,kBAgBZK,GAhBY,4CAAH,sDCFNO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAIjC,OACI,sBAAKa,UAAU,+DAAf,UACI,qBAAKC,IAAMd,EAAMe,IAAMN,IACvB,kCAAMA,EAAN,WCwBGO,EA7BC,SAAC,GAAqB,IAAlBlB,EAAiB,EAAjBA,UAEhB,ECDwB,SAAEA,GAE1B,MAA0BnB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAbAC,qBAAU,WAENvB,EAASC,GACJuB,MAAM,SAAAd,GACHY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAKtB,CAAEnB,IAEEoB,EDpBQI,CAAcxB,GAAtBM,EAAP,EAAOA,KAIP,OACI,qCACI,qBAAIS,UAAU,0CAAd,cAA2Df,EAA3D,OAIA,qBAAKe,UAAU,YAAf,SAIYT,EAAKE,KAAK,SAAAiB,GAAG,OACT,cAAC,EAAD,eAEQA,GADEA,EAAIf,aEiB3BgB,MAjCf,WAEI,MAAoC7C,mBAAS,CAAC,KAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAIA,OAEI,qCACI,yCACA,cAAC,EAAD,CAAcA,cAAgBA,IAC9B,uBAIA,6BAGQ+C,EAAWnB,KAAK,SAAAR,GAAS,OAErB,cAAC,EAAD,CACIA,UAAYA,GACNA,Y,MCrBlC4B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.f398e9ff.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes  from 'prop-types'\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inptValue, setinptValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setinptValue(e.target.value);\n        \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if( inptValue.trim().length > 2) {\n            setCategories( cats => [inptValue, ...cats]);\n            setinptValue('');\n        }\n        \n        \n    }\n\n    return (\n        \n        <form onSubmit={ handleSubmit }>\n            <input \n                placeholder=\"Que buscas?\"\n                type=\"text\"\n                value={ inptValue}\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.prototypes = { \n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","\n\n\n\nexport const getGifs = async( categoria ) => {\n    \n    const url = `https://api.giphy.com/v1/gifs/search?q=${ categoria }&limit=10&api_key=CbNmCQsVkFWFOOL8ohccLdX1mXSz69hv`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    \n    const gifs = data.map( imgs => {\n        return {\n            id: imgs.id,\n            title: imgs.title,\n            url: imgs.images.downsized_medium.url\n        }\n    } )\n\n\n\n    return gifs;\n\n\n}","import React from 'react'\n\n export const GifGridItem = ({title, url}) => {\n\n    \n\n    return (\n        <div className=\"card animate__animated animate__bounceInUp animate__delay-1s\">\n            <img src={ url } alt={ title }/>\n            <p> { title } </p>\n        </div>\n    )\n}\n\n\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nconst GifGrid = ( { categoria } ) => {\n\n    const {data} = useFetchGifs( categoria);\n\n    \n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__bounceInLeft\"> { categoria } </h3>\n\n            \n\n            <div className=\"card-grid\">\n\n\n                    {\n                        data.map( img => (\n                            <GifGridItem\n                                key={ img.id }\n                                {...img}\n                            />\n                        ))\n                    }\n\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from 'react';\nimport { getGifs } from \"../helpers/getGifs\";\n\n\n\nexport const useFetchGifs = ( categoria ) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n\n    })\n\n    useEffect(() => {\n\n        getGifs( categoria )\n            .then( imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false\n                })\n\n            })\n        \n    }, [ categoria ])\n\n    return state;// { data [], loading: true}\n}","import React,{ useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\n\n\nfunction GifExpertApp() {\n\n    const [categories, setCategories] = useState(['']);\n\n    \n\n    return (\n\n        <>\n            <h2>Gif App</h2>\n            <AddCategory  setCategories={ setCategories }/>\n            <hr />\n\n\n\n            <ol>\n            \n                {\n                    categories.map( categoria => (\n\n                        <GifGrid \n                            categoria={ categoria }\n                            key={ categoria }\n                        />\n                    ))  \n                }\n                \n            </ol>\n        </>\n    );\n}\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}